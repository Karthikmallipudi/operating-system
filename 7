#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <string.h>
#include <sys/ipc.h>
#include <sys/shm.h>

#define SHM_SIZE 1024

int main() {
    int shmid;
    key_t key = 1234;

    
    if ((shmid = shmget(key, SHM_SIZE, IPC_CREAT | 0666)) < 0) {
        perror("shmget");
        exit(1);
    }

    
    char *shm = shmat(shmid, NULL, 0);
    if (shm == (char *) -1) {
        perror("shmat");
        exit(1);
    }

    
    int pid = getpid();

    if (pid == 0) {
        
        printf("Child process (PID %d) reading from shared memory: %s\n", pid, shm);
    } else {
        
        printf("Parent process (PID %d) writing to shared memory...\n", pid);

        char message[] = "Hello, shared memory!";
        strncpy(shm, message, SHM_SIZE);

        
        wait(NULL);

        printf("Parent process completed.\n");
    }

    
    shmdt(shm);

    
    shmctl(shmid, IPC_RMID, NULL);

    return 0;
}
